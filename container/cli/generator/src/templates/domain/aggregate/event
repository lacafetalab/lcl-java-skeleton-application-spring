package <%= package %>;

import pe.lacafetalab.pao.shared.domain.bus.event.DomainEvent;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Objects;

public final class <%= class_name %> extends DomainEvent {
    <%_ params.forEach(function(param){ _%>
    private final String <%= param %>;
    <%_ }); _%>

    public <%= class_name %>() {
        super(null);
        <%_ params.forEach(function(param){ _%>
        this.<%= param %> = null;
        <%_ }); _%>
    }

    public <%= class_name %>(String aggregateId, <%= str_string_property %>) {
        super(aggregateId);
        <%_ params.forEach(function(param){ _%>
        this.<%= param %> = <%= param %>;
        <%_ }); _%>
    }

    public <%= class_name %>(String aggregateId, String eventId, String occurredOn, <%= str_string_property %>) {
        super(aggregateId, eventId, occurredOn);
        <%_ params.forEach(function(param){ _%>
        this.<%= param %> = <%= param %>;
        <%_ }); _%>
    }

    @Override
    public String eventName() {
        return "<%= event_name %>";
    }

    @Override
    public HashMap<String, Serializable> toPrimitives() {
        return new HashMap<String, Serializable>() {{
            <%_ params.forEach(function(param){ _%>
            put("<%= param %>", <%= param %>);
            <%_ }); _%>
        }};
    }

    @Override
    public <%= class_name %> fromPrimitives(String aggregateId, HashMap<String, Serializable> body, String eventId, String occurredOn) {
        return new <%= class_name %>(aggregateId, eventId, occurredOn, <%- str_map_property %>);
    }
    <%_ params.forEach(function(param){ _%>

    public String <%= param %>() {
        return <%= param %>;
    }
    <%_ }); _%>

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof <%= class_name %>)) return false;
        <%= class_name %> that = (<%= class_name %>) o;
        return <%- str_vo_equals %>;
    }

    @Override
    public int hashCode() {
        return Objects.hash(<%= str_property %>);
    }
}
