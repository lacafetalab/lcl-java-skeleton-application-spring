package <%= package %>;

import org.springframework.stereotype.Service;
import <%= package_application %>.<%= class_response_list %>;
import <%= package_application %>.<%= class_response_entity %>;
import <%= package_domain %>.*;
import pe.lacafetalab.pao.shared.domain.bus.event.EventBus;
import pe.lacafetalab.pao.shared.exceptions.BadRequestException;

import java.util.stream.Collectors;

@Service
public final class <%= class_name %> {
    private final <%= class_repository %> repository;
    private final EventBus eventBus;

    public <%= class_name %>(<%= class_repository %> repository, EventBus eventBus) {
        this.repository = repository;
        this.eventBus = eventBus;
    }

    public <%= class_response %> execute(<%= str_vo_property%>) {
        <%_ if (service_template == "findById") { _%>
        <%= class_entity %> <%= entity_name %> = repository.findById(id).orElseThrow(()-> new BadRequestException("404","<%= class_entity %> not found"));
        eventBus.publish(<%= entity_name %>.pullDomainEvents());
        return <%= class_response_entity %>.fromAggregate(<%= entity_name %>);
        <%_ } _%>
        <%_ if (service_template == "searchCriteria") { _%>
        return new <%= class_response_list %>(
                repository.findAll().stream().map(<%= class_response_entity %>::fromAggregate).collect(Collectors.toList())
        );
        <%_ } _%>
    }
}
