buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:2.3.1.RELEASE"
  }
}

subprojects {
	apply plugin: "java"
	apply plugin: "io.spring.dependency-management"
	apply plugin: "org.springframework.boot"

	//group = 'pe.lacafetalab.pao'
	//version = '0.0.1-SNAPSHOT'
	sourceCompatibility = 11
    targetCompatibility = 11

	repositories {
		mavenCentral()
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.1.RELEASE'
		implementation 'org.springframework.boot:spring-boot-starter-web:2.3.1.RELEASE'
		compileOnly 'org.projectlombok:lombok:1.18.12'
		runtimeOnly 'org.postgresql:postgresql:42.2.14'
		annotationProcessor 'org.projectlombok:lombok:1.18.12'
		testImplementation('org.springframework.boot:spring-boot-starter-test:2.3.1.RELEASE') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}

		// Test
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
		testImplementation 'org.mockito:mockito-core:2.+'
		testImplementation 'com.github.javafaker:javafaker:1.0.1'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

		if (project.name != "shared") {
			implementation project(":shared")
		//	//testImplementation project(":shared").sourceSets.test.output
		}
	}

	sourceSets {
		main {
			java { srcDirs = [ 'main' ] }
			resources { srcDir 'resources' }
		}
		test {
			java { srcDirs = [ 'test' ] }
		}
	}

	task view_paths {
		doLast { task ->
			println "$task.project.name"
			println "------------------"
			println "Main: $sourceSets.main.java.srcDirTrees"
			println "   Resources: $sourceSets.main.resources.srcDirTrees"
			println "Tests: $sourceSets.test.java.srcDirTrees"
			println "   Resources: $sourceSets.test.resources.srcDirTrees"
		}
	}

	test {
		useJUnitPlatform()
	}

	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}

}